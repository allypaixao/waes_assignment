<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="14" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Run Tests for Test API" duration-ms="3134" started-at="2018-09-20T23:59:48Z" finished-at="2018-09-20T23:59:51Z">
    <groups>
    </groups>
    <test name="Assessment Tests" duration-ms="3134" started-at="2018-09-20T23:59:48Z" finished-at="2018-09-20T23:59:51Z">
      <class name="alessandra.assignment.waesAssignment.tests.SmokeTests">
        <test-method status="PASS" signature="sendGetToBaseURLReturns200()[pri:0, instance:alessandra.assignment.waesAssignment.tests.SmokeTests@1dc03ce]" name="sendGetToBaseURLReturns200" duration-ms="1375" started-at="2018-09-20T23:59:48Z" description="Will send a GET method to /diff method and validate 200 code returned" finished-at="2018-09-20T23:59:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendGetToBaseURLReturns200 -->
        <test-method status="PASS" signature="sendGetToNotAddedIDReturns404()[pri:0, instance:alessandra.assignment.waesAssignment.tests.SmokeTests@1dc03ce]" name="sendGetToNotAddedIDReturns404" duration-ms="1375" started-at="2018-09-20T23:59:48Z" description="Will send a GET method to /diff method and validate 404 code returned" finished-at="2018-09-20T23:59:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendGetToNotAddedIDReturns404 -->
        <test-method status="PASS" signature="sendPostReturns200()[pri:0, instance:alessandra.assignment.waesAssignment.tests.SmokeTests@1dc03ce]" name="sendPostReturns200" duration-ms="1375" started-at="2018-09-20T23:59:48Z" description="Will send a POST method with id, side and value, expecting a 200 code on response" finished-at="2018-09-20T23:59:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendPostReturns200 -->
      </class> <!-- alessandra.assignment.waesAssignment.tests.SmokeTests -->
      <class name="alessandra.assignment.waesAssignment.tests.EndToEndTest">
        <test-method status="PASS" signature="validateDiffCharsAndLengthReturnForLeftRigthPost()[pri:0, instance:alessandra.assignment.waesAssignment.tests.EndToEndTest@f8360d]" name="validateDiffCharsAndLengthReturnForLeftRigthPost" duration-ms="189" started-at="2018-09-20T23:59:49Z" description="Will send two post methods with left and right values anda validate the json returned to DIFFERENT_LENGTH" finished-at="2018-09-20T23:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDiffCharsAndLengthReturnForLeftRigthPost -->
        <test-method status="PASS" signature="validateDiffCharsReturnForLeftRigthPost()[pri:0, instance:alessandra.assignment.waesAssignment.tests.EndToEndTest@f8360d]" name="validateDiffCharsReturnForLeftRigthPost" duration-ms="157" started-at="2018-09-20T23:59:49Z" description="Will send two post methods with left and right values anda validate the json returned to DIFFERENT_CHARS" finished-at="2018-09-20T23:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDiffCharsReturnForLeftRigthPost -->
        <test-method status="FAIL" signature="validateDiffLengthReturnForLeftRigthPost()[pri:0, instance:alessandra.assignment.waesAssignment.tests.EndToEndTest@f8360d]" name="validateDiffLengthReturnForLeftRigthPost" duration-ms="122" started-at="2018-09-20T23:59:50Z" description="Will send two post methods with left and right values anda validate the json returned is DIFFERENT_LENGTH" finished-at="2018-09-20T23:59:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Reponse Body: {"detail":"Values are different on char(s) [2] [6].","type":"DIFFERENT_CHARS"} expected [{"type":"DIFFERENT_LENGTH"}] but found [{"detail":"Values are different on char(s) [2] [6].","type":"DIFFERENT_CHARS"}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Reponse Body: {"detail":"Values are different on char(s) [2] [6].","type":"DIFFERENT_CHARS"} expected [{"type":"DIFFERENT_LENGTH"}] but found [{"detail":"Values are different on char(s) [2] [6].","type":"DIFFERENT_CHARS"}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at alessandra.assignment.waesAssignment.tests.EndToEndTest.validateDiffLengthReturnForLeftRigthPost(EndToEndTest.java:128)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDiffLengthReturnForLeftRigthPost -->
        <test-method status="PASS" signature="validateEqualReturnForLeftRigthPost()[pri:0, instance:alessandra.assignment.waesAssignment.tests.EndToEndTest@f8360d]" name="validateEqualReturnForLeftRigthPost" duration-ms="289" started-at="2018-09-20T23:59:50Z" description="Will send two post methods with left and right values anda validate the json returned to EQUAL" finished-at="2018-09-20T23:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEqualReturnForLeftRigthPost -->
      </class> <!-- alessandra.assignment.waesAssignment.tests.EndToEndTest -->
      <class name="alessandra.assignment.waesAssignment.tests.ErrorMessages">
        <test-method status="PASS" signature="validateGetIdNotInitializedResponseMessage()[pri:0, instance:alessandra.assignment.waesAssignment.tests.ErrorMessages@b4c3ab]" name="validateGetIdNotInitializedResponseMessage" duration-ms="104" started-at="2018-09-20T23:59:50Z" description="Will send a GET method to /diff with a non added ID and validate the returned message to: ID id not initialized." finished-at="2018-09-20T23:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGetIdNotInitializedResponseMessage -->
        <test-method status="FAIL" signature="validateGetNullLeft()[pri:0, instance:alessandra.assignment.waesAssignment.tests.ErrorMessages@b4c3ab]" name="validateGetNullLeft" duration-ms="206" started-at="2018-09-20T23:59:50Z" description="Will send a GET method to the id with just right side with value and validate the reurned message: Left side contains no value." finished-at="2018-09-20T23:59:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [{"detail":"Left side contains no value.","type":"DIFFERENT_LENGTH"}] but found [{"type":"EQUAL"}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [{"detail":"Left side contains no value.","type":"DIFFERENT_LENGTH"}] but found [{"type":"EQUAL"}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at alessandra.assignment.waesAssignment.tests.ErrorMessages.validateGetNullLeft(ErrorMessages.java:227)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGetNullLeft -->
        <test-method status="FAIL" signature="validateGetNullRight()[pri:0, instance:alessandra.assignment.waesAssignment.tests.ErrorMessages@b4c3ab]" name="validateGetNullRight" duration-ms="123" started-at="2018-09-20T23:59:50Z" description="Will send a GET method to the id with just left side with elementand validate the reurned message: Right side contains no value." finished-at="2018-09-20T23:59:50Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[ HTTP error code : 204]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException:  HTTP error code : 204
at alessandra.assignment.waesAssignment.pageobjects.ApiControlerGet.sendGetMothodForJsonResponse(ApiControlerGet.java:83)
at alessandra.assignment.waesAssignment.tests.ErrorMessages.validateGetNullRight(ErrorMessages.java:177)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGetNullRight -->
        <test-method status="PASS" signature="validatePostDataNotInBase64Response()[pri:0, instance:alessandra.assignment.waesAssignment.tests.ErrorMessages@b4c3ab]" name="validatePostDataNotInBase64Response" duration-ms="222" started-at="2018-09-20T23:59:50Z" description="Will send a GET method to /diff with a non base 64 body returned message: Data in body not Base64 formatted." finished-at="2018-09-20T23:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePostDataNotInBase64Response -->
        <test-method status="PASS" signature="validatePostEmptyBody400message()[pri:0, instance:alessandra.assignment.waesAssignment.tests.ErrorMessages@b4c3ab]" name="validatePostEmptyBody400message" duration-ms="118" started-at="2018-09-20T23:59:50Z" description="Will send a POST method to with an empty body and validate the returned message. Error code expected is 400. " finished-at="2018-09-20T23:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePostEmptyBody400message -->
        <test-method status="PASS" signature="validatePostNotOnJsonFormatResponseCode()[pri:0, instance:alessandra.assignment.waesAssignment.tests.ErrorMessages@b4c3ab]" name="validatePostNotOnJsonFormatResponseCode" duration-ms="36" started-at="2018-09-20T23:59:50Z" description="Will send a Post method to /diff method and validate 415 code returned" finished-at="2018-09-20T23:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePostNotOnJsonFormatResponseCode -->
        <test-method status="PASS" signature="validatePostSideNotSupported501message()[pri:0, instance:alessandra.assignment.waesAssignment.tests.ErrorMessages@b4c3ab]" name="validatePostSideNotSupported501message" duration-ms="164" started-at="2018-09-20T23:59:50Z" description="Will send a POST method with an side parameter as up and validate the returned message. Error code expected is 501. " finished-at="2018-09-20T23:59:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePostSideNotSupported501message -->
      </class> <!-- alessandra.assignment.waesAssignment.tests.ErrorMessages -->
    </test> <!-- Assessment Tests -->
  </suite> <!-- Run Tests for Test API -->
</testng-results>
